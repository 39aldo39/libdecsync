name: publish

on:
  push:
    tags:
      - 'v*'

env:
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
  SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
  SIGNING_SECRET_KEY_RING_FILE: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}
  GPG_KEY_CONTENTS: ${{ secrets.GPG_KEY_CONTENTS }}

jobs:
  publish-windows:
    runs-on: windows-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2

      # Build
      - run: CALL gradlew.bat linkReleaseSharedMingwX64
        shell: cmd

      # Upload decsync.dll
      - uses: actions/upload-artifact@v2
        with:
          name: decsync.dll
          path: build/bin/mingwX64/releaseShared/decsync.dll

      # Setup signing and publish
      - run: CALL echo %GPG_KEY_CONTENTS% > %SIGNING_SECRET_KEY_RING_FILE%.base64 && CALL certutil -decode %SIGNING_SECRET_KEY_RING_FILE%.base64 %SIGNING_SECRET_KEY_RING_FILE% && CALL gradlew.bat publishMingwX64PublicationToMavenRepository
        shell: cmd
  publish-linux-and-misc:
    needs: [publish-windows]
    runs-on: ubuntu-latest
    steps:
      # Checkout
      - uses: actions/checkout@v2

      # Build
      - run: ./gradlew linkReleaseSharedLinuxX64

      # Upload libdecsync.so
      - uses: actions/upload-artifact@v2
        with:
          name: libdecsync.so
          path: build/bin/linuxX64/releaseShared/libdecsync.so

      # Create and upload libdecsync.deb
      - run: ./create-deb.sh
      - uses: actions/upload-artifact@v2
        with:
          name: libdecsync.deb
          path: deb.deb

      # Setup signing and publish
      - run: echo "$GPG_KEY_CONTENTS" | base64 -d > "$SIGNING_SECRET_KEY_RING_FILE" && ./gradlew publish